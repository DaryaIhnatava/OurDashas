@model Dictionary<string, string>
@using Jewelry.Web.i18n
@using Microsoft.Extensions.Configuration
@inject IConfiguration configuration
@{
    ViewData["Title"] = "Home Page";
}
<div class="row">
    <label>Введите свое имя </label>
    <input type="text" ng-model="name" placeholder="Имя" />
    <h1>@Resource.Welcome, {{name}}</h1>
    <div style="padding-top:50px;">
        <form action="/Home/ChangeLanguage">
            Язык приложения:
            <select name="lang">
                <option value="ru-RU">Русский</option>
                <option value="en-US">English</option>
            </select>
            <input type="submit" value="Save" />
        </form>
    </div>
    <div style="padding-top:50px;">
        <form action="/Home/ChangeTheme">
            Тема приложения:
            <select name="theme">
                <option value="white">@Resource.White</option>
                <option value="black">@Resource.Black</option>
            </select>
            <input type="submit" value="Save" />
        </form>
    </div>
</div>
 @{
    var now = DateTime.Now.ToUniversalTime();
    var timeZone = Context.Request.Cookies["timeZone"] ?? configuration.GetSection("TimeZoneKey").Value;
}
<div class="row" style="padding-top:50px;">
    Часовой пояс приложения:
    <form action="/Home/ChangeTimeZone">
        <select name="timeZone">
            @foreach (var zone in Model)
            {
                if (zone.Key == timeZone)
                {
                    <option selected value="@zone.Key">@zone.Value</option>
                }
                else
                {
                    <option value="@zone.Key">@zone.Value</option>
                }
            }
        </select>
        <input type="submit" value="Save" />
    </form>
</div>
<div class="row" style="padding-top: 100px; font-size: larger; font-weight: bold">

    @TimeZoneInfo.ConvertTimeFromUtc(now, TimeZoneInfo.FindSystemTimeZoneById(timeZone))
</div>
<script src="~/js/angular.js"></script>
